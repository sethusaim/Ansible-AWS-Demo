- name: Setup Tekton in application instance
  hosts: Application_Group
  become: true
  vars_files:
    - /home/ubuntu/vars/variables.yml
  tasks:
    - name: Create argocd namespace
      become: false 
      shell: kubectl create namespace argocd

    - name: Install ArgoCD 
      become: false
      shell: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

    - name: Patch load balancer to argocd server service
      become: false
      shell: kubectl patch svc argocd-server -n argocd -p '{"spec":{"type":"LoadBalancer"}}'

    - name: Install jq
      become: true
      apt:
        name: jq
        state: present

    - name: Wait till load balancer ip address is available
      shell: sleep 10

    - name: Get load balancer ip address of argocd server
      become: false
      shell: kubectl get svc argocd-server -n argocd -o json | jq .status.loadBalancer.ingress[0].hostname
      register: argocd_url

    - debug:
        var: argocd_url.stdout

    - name: Get argocd initial passsword
      become: false
      shell: 'kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo'
      register: argocd_initial_password
    
    - debug:
        var: argocd_initial_password.stdout

    - name: Install argocd cli
      get_url:
        url: https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        dest: /usr/local/bin/argocd

    - name: Set execution permissions for argocd binary
      become: true
      file:
        path: /usr/local/bin/argocd
        mode: +x
        recurse: yes

    - name: Install jq
      become: true
      apt:
        name: jg
        state: present

    - name: Login to argocd server using cli
      shell: argocd login {{argocd_url.stdout}} --username admin --password {{argocd_initial_password.stdout}} --insecure
      
    - name: Update argocd account password
      shell: argocd account update-password --current-password {{argocd_initial_password.stdout}} --new-password '{{k8s.argocd.password}}' --insecure